---
import Layout from '../layouts/Layout.astro';
import Navigation from '../components/Navigation.astro';
---

<Layout 
  title="Page Not Found - Voice from time"
  description="The page you're looking for doesn't exist. Explore our collection of historical letters and speeches instead."
>
  <Navigation />
  
  <main class="error-container">
    <div class="container">
      <div class="error-content">
        <div class="error-number">404</div>
        <h1 class="error-title">Page Not Found</h1>
        <p class="error-description">
          The letter you're searching for seems to have been lost to time. 
          But don't worryâ€”our archive holds many other treasures waiting to be discovered.
        </p>
        
        <div class="error-actions">
          <a href="/" class="primary-button">Return Home</a>
          <a href="/search" class="secondary-button">Search Letters</a>
        </div>
        
        <div class="suggestions">
          <h2>Perhaps you'd like to explore:</h2>
          <div class="suggestion-links">
            <a href="/collections" class="suggestion-link">
              <span class="link-title">Browse Collections</span>
              <span class="link-desc">Explore letters by theme</span>
            </a>
            <a href="/archive" class="suggestion-link">
              <span class="link-title">View Archive</span>
              <span class="link-desc">All letters chronologically</span>
            </a>
            <div class="suggestion-link random-suggestion">
              <span class="link-title">Surprise Me</span>
              <span class="link-desc">Discover a random letter</span>
            </div>
          </div>
        </div>
      </div>
    </div>
  </main>
</Layout>

<style>
  .error-container {
    padding: 6rem 0 4rem;
    min-height: 100vh;
    display: flex;
    align-items: center;
  }

  .container {
    max-width: 600px;
    margin: 0 auto;
    padding: 0 2rem;
  }

  .error-content {
    text-align: center;
  }

  .error-number {
    font-family: 'EB Garamond', serif;
    font-size: clamp(6rem, 20vw, 12rem);
    font-weight: 300;
    color: var(--accent-primary);
    opacity: 0.3;
    margin-bottom: -2rem;
    line-height: 0.8;
  }

  .error-title {
    font-family: 'EB Garamond', serif;
    font-size: 2.5rem;
    font-weight: 500;
    color: var(--text-primary);
    margin-bottom: 1.5rem;
  }

  .error-description {
    font-size: 1.2rem;
    line-height: 1.6;
    color: var(--text-tertiary);
    margin-bottom: 3rem;
    max-width: 500px;
    margin-left: auto;
    margin-right: auto;
  }

  .error-actions {
    display: flex;
    gap: 1rem;
    justify-content: center;
    margin-bottom: 4rem;
    flex-wrap: wrap;
  }

  .primary-button {
    background: linear-gradient(135deg, var(--accent-primary) 0%, var(--accent-tertiary) 100%);
    color: white;
    padding: 0.875rem 2rem;
    border-radius: 25px;
    text-decoration: none;
    font-weight: 500;
    transition: all 0.3s ease;
    box-shadow: 0 2px 8px rgba(212, 165, 116, 0.3);
  }

  .primary-button:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 15px rgba(212, 165, 116, 0.4);
  }

  .secondary-button {
    background: transparent;
    color: var(--text-tertiary);
    padding: 0.875rem 2rem;
    border: 1px solid var(--text-light);
    border-radius: 25px;
    text-decoration: none;
    font-weight: 500;
    transition: all 0.2s ease;
  }

  .secondary-button:hover {
    border-color: var(--accent-primary);
    color: var(--text-primary);
    background: rgba(212, 165, 116, 0.05);
  }

  .suggestions {
    padding-top: 3rem;
    border-top: 1px solid var(--border-secondary);
  }

  .suggestions h2 {
    font-family: 'EB Garamond', serif;
    font-size: 1.3rem;
    font-weight: 500;
    color: var(--text-primary);
    margin-bottom: 2rem;
  }

  .suggestion-links {
    display: grid;
    gap: 1rem;
    max-width: 400px;
    margin: 0 auto;
  }

  .suggestion-link {
    display: flex;
    flex-direction: column;
    align-items: center;
    padding: 1.5rem;
    background: var(--bg-primary);
    border: 1px solid var(--border-secondary);
    border-radius: 8px;
    text-decoration: none;
    transition: all 0.2s ease;
  }

  .suggestion-link:hover {
    border-color: var(--accent-primary);
    background: rgba(212, 165, 116, 0.02);
    transform: translateY(-2px);
  }

  .random-suggestion {
    cursor: pointer;
  }

  .link-title {
    font-weight: 500;
    color: var(--text-primary);
    margin-bottom: 0.25rem;
  }

  .link-desc {
    font-size: 0.85rem;
    color: var(--text-tertiary);
  }

  @media (max-width: 768px) {
    .error-container {
      padding: 4rem 0 2rem;
    }

    .container {
      padding: 0 1rem;
    }

    .error-title {
      font-size: 2rem;
    }

    .error-description {
      font-size: 1rem;
    }

    .error-actions {
      flex-direction: column;
      align-items: center;
    }

    .primary-button,
    .secondary-button {
      min-width: 200px;
      text-align: center;
    }
  }
</style>

<script>
  // Handle random letter suggestion
  document.addEventListener('DOMContentLoaded', () => {
    const randomSuggestion = document.querySelector('.random-suggestion');
    if (randomSuggestion) {
      randomSuggestion.addEventListener('click', async () => {
        try {
          const response = await fetch('/api/random-content.json');
          const data = await response.json();
          if (data.content && data.content.length > 0) {
            const randomItem = data.content[Math.floor(Math.random() * data.content.length)];
            window.location.href = `/${randomItem.collection}/${randomItem.slug}`;
          }
        } catch (error) {
          console.error('Error fetching random content:', error);
          // Fallback to homepage
          window.location.href = '/';
        }
      });
    }
  });
</script>