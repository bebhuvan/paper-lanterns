---
import { getCollection } from 'astro:content';
import Layout from '../layouts/Layout.astro';
import Navigation from '../components/Navigation.astro';

// Get featured letters, speeches, lectures, and essays from content collections
const allLetters = await getCollection('letters');
const allSpeeches = await getCollection('speeches');
const allLectures = await getCollection('lectures');
const allEssays = await getCollection('essays');
const allContent = [
  ...allLetters.map(item => ({ ...item, contentType: 'letter' })),
  ...allSpeeches.map(item => ({ ...item, contentType: 'speech' })),
  ...allLectures.map(item => ({ ...item, contentType: 'lecture' })),
  ...allEssays.map(item => ({ ...item, contentType: 'essay' }))
];

// Get featured content with diversity across content types
const featuredLetters = allLetters.filter(item => item.data.featured).map(item => ({ ...item, contentType: 'letter' }));
const featuredSpeeches = allSpeeches.filter(item => item.data.featured).map(item => ({ ...item, contentType: 'speech' }));
const featuredLectures = allLectures.filter(item => item.data.featured).map(item => ({ ...item, contentType: 'lecture' }));
const featuredEssays = allEssays.filter(item => item.data.featured).map(item => ({ ...item, contentType: 'essay' }));

// Define latest additions (recently added content that should be prioritized)
const latestAdditions = [
  'bacon-burghley-1592',  // Francis Bacon letter
  'thoreau-walking-1862'   // Thoreau Walking essay
];

// Function to check if an item is a latest addition
const isLatestAddition = (item) => latestAdditions.includes(item.slug);

// Prioritize latest additions in each category, then others
const prioritizedLetters = [
  ...featuredLetters.filter(isLatestAddition),
  ...featuredLetters.filter(item => !isLatestAddition(item)).sort((a, b) => b.data.date.getTime() - a.data.date.getTime())
];

const prioritizedEssays = [
  ...featuredEssays.filter(isLatestAddition),
  ...featuredEssays.filter(item => !isLatestAddition(item)).sort((a, b) => b.data.date.getTime() - a.data.date.getTime())
];

// Take the best from each type, prioritizing latest additions
const diverseFeatured = [
  ...featuredLectures.slice(0, 2),  // Up to 2 lectures
  ...prioritizedEssays.slice(0, 2),   // Up to 2 essays (latest additions first)
  ...prioritizedLetters.slice(0, 2),  // Up to 2 letters (latest additions first)
  ...featuredSpeeches.slice(0, 1)   // Up to 1 speech
].sort((a, b) => {
  // Sort by latest additions first, then by date
  const aIsLatest = isLatestAddition(a);
  const bIsLatest = isLatestAddition(b);
  if (aIsLatest && !bIsLatest) return -1;
  if (!aIsLatest && bIsLatest) return 1;
  return b.data.date.getTime() - a.data.date.getTime();
});

// If we need more content, add non-featured items
const additionalContent = allContent
  .filter(item => !item.data.featured)
  .sort((a, b) => b.data.date.getTime() - a.data.date.getTime())
  .slice(0, Math.max(0, 6 - diverseFeatured.length));

const displayContent = [...diverseFeatured, ...additionalContent].slice(0, 6);

// Group content by era for browsing
const eras = [
  { name: '20th Century', start: 1900, end: 2000, items: [] as typeof allContent },
  { name: '19th Century', start: 1800, end: 1900, items: [] as typeof allContent },
  { name: '18th Century & Earlier', start: 0, end: 1800, items: [] as typeof allContent }
];

allContent.forEach(item => {
  const year = item.data.date.getFullYear();
  const era = eras.find(e => year >= e.start && year < e.end);
  if (era) era.items.push(item);
});
---

<Layout title="Paper Lanterns">
  <Navigation />
  
  <main>
    <div class="container">
      <header class="header">
        <h1 class="site-title">Paper Lanterns</h1>
        <p class="hero-text">
          Before emails, before texts, before instant messages‚Äîthere were letters, speeches, and essays. 
          Handwritten, deliberate, and profound. These are the intimate conversations, powerful orations, 
          and thoughtful reflections from history's greatest minds: the love letters that broke hearts, 
          the speeches that moved nations, the essays that challenged thinking, and the ideas that sparked revolutions.
        </p>
      </header>

      <nav class="navigation">
        <p class="intro-text">Explore our collection</p>
      </nav>

      <section class="browse-options">
        <div class="stats-overview">
          <a href="/archive?filter=letter" class="stat-item stat-link">
            <span class="stat-number">{allLetters.length}</span>
            <span class="stat-label">Letters</span>
          </a>
          <a href="/speeches" class="stat-item stat-link">
            <span class="stat-number">{allSpeeches.length}</span>
            <span class="stat-label">Speeches</span>
          </a>
          <a href="/lectures" class="stat-item stat-link">
            <span class="stat-number">{allLectures.length}</span>
            <span class="stat-label">Lectures</span>
          </a>
          <a href="/essays" class="stat-item stat-link">
            <span class="stat-number">{allEssays.length}</span>
            <span class="stat-label">Essays</span>
          </a>
          <a href="/archive" class="stat-item stat-link">
            <span class="stat-number">{eras.filter(e => e.items.length > 0).length}</span>
            <span class="stat-label">Eras</span>
          </a>
        </div>

        <div class="browse-by-era">
          <h3>Browse by Era</h3>
          <div class="era-links">
            {eras.filter(era => era.items.length > 0).map(era => (
              <a href={`/search?q=${era.name.replace(/\s+/g, '-').toLowerCase()}`} class="era-link">
                <span class="era-name">{era.name}</span>
                <span class="era-count">{era.items.length}</span>
              </a>
            ))}
          </div>
        </div>

        <div class="browse-by-type">
          <h3>Browse by Type</h3>
          <div class="type-cards">
            <a href="/letters" class="type-card">
              <div class="type-icon">üìù</div>
              <div class="type-info">
                <span class="type-name">Letters</span>
                <span class="type-count">{allLetters.length} items</span>
              </div>
              <div class="type-description">Personal correspondence and intimate exchanges</div>
            </a>
            
            <a href="/essays" class="type-card">
              <div class="type-icon">üìö</div>
              <div class="type-info">
                <span class="type-name">Essays</span>
                <span class="type-count">{allEssays.length} items</span>
              </div>
              <div class="type-description">Thoughtful reflections and philosophical discourse</div>
            </a>
            
            
            <a href="/speeches" class="type-card">
              <div class="type-icon">üé§</div>
              <div class="type-info">
                <span class="type-name">Speeches</span>
                <span class="type-count">{allSpeeches.length} items</span>
              </div>
              <div class="type-description">Historic orations that moved nations</div>
            </a>
            
            <a href="/lectures" class="type-card">
              <div class="type-icon">üèõÔ∏è</div>
              <div class="type-info">
                <span class="type-name">Lectures</span>
                <span class="type-count">{allLectures.length} items</span>
              </div>
              <div class="type-description">Academic addresses advancing knowledge</div>
            </a>
          </div>
        </div>

        <div class="random-section">
          <button class="random-letter-btn-large">
            <svg class="shuffle-icon" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <polyline points="16,3 21,3 21,8"></polyline>
              <line x1="4" y1="20" x2="21" y2="3"></line>
              <polyline points="21,16 21,21 16,21"></polyline>
              <line x1="15" y1="15" x2="21" y2="21"></line>
              <line x1="4" y1="4" x2="9" y2="9"></line>
            </svg>
            <span>Surprise Me</span>
          </button>
          <p class="random-description">Feeling adventurous? Let serendipity guide you to a hidden gem.</p>
        </div>
      </section>

      <section class="featured-content">
        <h2 class="section-title">Featured Content</h2>
        {displayContent.map((item, index) => (
          <article class="content-preview" data-number={String(index + 1).padStart(2, '0')}>
            <div class="content-meta">
              <span class="content-type">{item.contentType === 'letter' ? 'Letter' : item.contentType === 'speech' ? 'Speech' : item.contentType === 'lecture' ? 'Lecture' : 'Essay'}</span>
              <a href={`/${item.contentType}/${item.slug}`} class="author-name">{item.data.author.name}</a>
              <div class="content-context">{item.data.context.replace(/\[([^\]]*)\]\([^)]*\)/g, '$1')}</div>
            </div>
            
            <div class="content-excerpt" style={`--drop-cap-color: ${item.data.drop_cap_color}`}>
              {item.data.excerpt}
            </div>

            <div class="continue-reading">
              <a href={`/${item.contentType}/${item.slug}`}>Continue reading</a>
            </div>
          </article>
        ))}
      </section>

      <footer class="footer">
        <p>All letters are in the public domain</p>
      </footer>
    </div>
  </main>
</Layout>

<style>
  .container {
    max-width: 720px;
    margin: 0 auto;
    padding: 0 3rem;
  }

  .header {
    padding: 16rem 0 8rem;
    text-align: center;
    position: relative;
  }

  .site-title {
    font-family: 'EB Garamond', serif;
    font-size: clamp(4rem, 12vw, 7rem);
    font-weight: 500;
    color: var(--text-primary);
    margin-bottom: 2rem;
    letter-spacing: -0.02em;
    line-height: 0.9;
  }

  .hero-text {
    font-size: 1.3rem;
    line-height: 1.6;
    color: var(--text-secondary);
    font-weight: 400;
    margin-bottom: 8rem;
    max-width: 600px;
    margin-left: auto;
    margin-right: auto;
  }

  .navigation {
    text-align: center;
    margin-bottom: 6rem;
    position: relative;
  }

  .navigation::before {
    content: '‚ú¶';
    position: absolute;
    top: -4rem;
    left: 50%;
    transform: translateX(-50%);
    color: var(--accent-gold);
    font-size: 1.5rem;
    opacity: 0.6;
  }

  .intro-text {
    color: var(--text-muted);
    font-size: 0.9rem;
    margin-bottom: 3rem;
    font-weight: 300;
  }

  .browse-options {
    margin-bottom: 6rem;
    text-align: center;
  }

  .stats-overview {
    display: flex;
    justify-content: center;
    gap: 3rem;
    margin-bottom: 4rem;
    padding: 2rem 0;
    border-top: 1px solid var(--border-secondary);
    border-bottom: 1px solid var(--border-secondary);
  }

  .stat-item {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 0.5rem;
  }

  .stat-link {
    text-decoration: none;
    padding: 0.75rem 1rem;
    border-radius: 8px;
    transition: all 0.2s ease;
    border: 1px solid transparent;
  }

  .stat-link:hover {
    background: var(--bg-accent);
    border-color: var(--border-accent);
    transform: translateY(-2px);
  }

  .stat-number {
    font-family: 'EB Garamond', serif;
    font-size: 2.2rem;
    font-weight: 500;
    color: var(--accent-primary);
    transition: color 0.2s ease;
  }

  .stat-link:hover .stat-number {
    color: var(--accent-tertiary);
  }

  .stat-label {
    font-size: 0.9rem;
    color: var(--text-muted);
    text-transform: uppercase;
    letter-spacing: 0.1em;
    transition: color 0.2s ease;
  }

  .stat-link:hover .stat-label {
    color: var(--text-secondary);
  }

  .browse-by-era h3 {
    font-family: 'EB Garamond', serif;
    font-size: 1.2rem;
    color: var(--text-primary);
    margin-bottom: 1.5rem;
  }

  .era-links {
    display: flex;
    justify-content: center;
    gap: 1.5rem;
    flex-wrap: wrap;
  }

  .era-link {
    display: flex;
    flex-direction: column;
    align-items: center;
    padding: 1rem 1.5rem;
    background: var(--bg-accent);
    border: 1px solid var(--border-accent);
    border-radius: 12px;
    text-decoration: none;
    transition: all 0.2s ease;
    min-width: 120px;
  }

  .era-link:hover {
    border-color: var(--accent-primary);
    background: rgba(212, 165, 116, 0.05);
  }

  .era-name {
    font-size: 0.9rem;
    color: var(--text-primary);
    font-weight: 500;
    margin-bottom: 0.25rem;
  }

  .era-count {
    font-size: 0.75rem;
    color: var(--accent-secondary);
  }

  .browse-by-type {
    margin-top: 3rem;
    margin-bottom: 2rem;
  }

  .browse-by-type h3 {
    font-family: 'EB Garamond', serif;
    font-size: 1.2rem;
    color: var(--text-primary);
    margin-bottom: 1.5rem;
    text-align: center;
  }

  .type-cards {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
    gap: 1.5rem;
    max-width: 1000px;
    margin: 0 auto;
  }

  .type-card {
    display: flex;
    flex-direction: column;
    padding: 1.5rem;
    background: var(--bg-primary);
    border: 1px solid var(--border-secondary);
    border-radius: 12px;
    text-decoration: none;
    transition: all 0.3s ease;
    position: relative;
    overflow: hidden;
  }

  .type-card:hover {
    transform: translateY(-4px);
    box-shadow: 0 8px 25px var(--drop-shadow);
    border-color: var(--accent-primary);
  }

  .type-card::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 2px;
    background: linear-gradient(90deg, var(--accent-primary), var(--accent-secondary));
    transform: scaleX(0);
    transition: transform 0.3s ease;
  }

  .type-card:hover::before {
    transform: scaleX(1);
  }

  .type-icon {
    font-size: 2rem;
    margin-bottom: 0.75rem;
  }

  .type-info {
    display: flex;
    flex-direction: column;
    margin-bottom: 0.5rem;
  }

  .type-name {
    font-family: 'EB Garamond', serif;
    font-size: 1.1rem;
    font-weight: 500;
    color: var(--text-primary);
    margin-bottom: 0.25rem;
  }

  .type-count {
    font-size: 0.8rem;
    color: var(--accent-secondary);
    font-weight: 500;
  }

  .type-description {
    font-size: 0.85rem;
    color: var(--text-secondary);
    line-height: 1.4;
  }

  .random-section {
    margin-top: 3rem;
    text-align: center;
    padding: 2rem 0;
  }

  .random-letter-btn-large {
    display: inline-flex;
    align-items: center;
    gap: 0.75rem;
    padding: 1rem 2rem;
    background: var(--accent-primary);
    color: white;
    border: none;
    border-radius: 30px;
    font-size: 1rem;
    font-weight: 500;
    cursor: pointer;
    transition: all 0.3s ease;
    font-family: inherit;
    box-shadow: 0 4px 12px rgba(212, 165, 116, 0.3);
  }

  .random-letter-btn-large:hover {
    background: var(--accent-tertiary);
    transform: translateY(-2px);
    box-shadow: 0 6px 20px rgba(212, 165, 116, 0.4);
  }

  .random-letter-btn-large .shuffle-icon {
    transition: transform 0.3s ease;
  }

  .random-letter-btn-large:hover .shuffle-icon {
    transform: rotate(180deg);
  }

  .random-description {
    font-size: 0.9rem;
    color: var(--text-muted);
    margin-top: 1rem;
    font-style: italic;
  }

  .section-title {
    font-family: 'EB Garamond', serif;
    font-size: 1.5rem;
    font-weight: 500;
    color: var(--text-primary);
    text-align: center;
    margin-bottom: 4rem;
    position: relative;
  }

  .section-title::after {
    content: '‚ú¶';
    position: absolute;
    bottom: -1.5rem;
    left: 50%;
    transform: translateX(-50%);
    color: var(--accent-gold);
    font-size: 1rem;
    opacity: 0.6;
  }

  .featured-content {
    display: flex;
    flex-direction: column;
    gap: 5rem;
  }

  .content-preview {
    position: relative;
  }

  .content-preview::before {
    content: attr(data-number);
    position: absolute;
    left: -6rem;
    top: -1rem;
    font-size: 1.2rem;
    color: var(--text-light);
    font-weight: 300;
    opacity: 0.5;
  }

  .content-meta {
    margin-bottom: 4rem;
    text-align: center;
    position: relative;
  }

  .content-meta::after {
    content: '‚ó¶';
    position: absolute;
    bottom: -2rem;
    left: 50%;
    transform: translateX(-50%);
    color: currentColor;
    opacity: 0.2;
    font-size: 0.8rem;
  }

  .content-type {
    display: block;
    font-size: 0.7rem;
    text-transform: uppercase;
    letter-spacing: 0.1em;
    color: var(--accent-secondary);
    margin-bottom: 0.5rem;
    font-weight: 500;
  }

  .author-name {
    font-family: 'EB Garamond', serif;
    font-size: 1.2rem;
    font-weight: 500;
    color: var(--text-primary);
    margin-bottom: 0.5rem;
    letter-spacing: 0.02em;
    font-variant: small-caps;
    text-decoration: none;
    transition: color 0.2s ease;
    cursor: pointer;
  }

  .author-name:hover {
    color: var(--accent-secondary);
  }

  .content-context {
    color: var(--accent-secondary);
    font-size: 0.95rem;
    font-style: italic;
  }

  .content-excerpt {
    font-size: 1.3rem;
    line-height: 1.7;
    color: var(--text-primary);
    text-align: left;
    position: relative;
    max-width: 640px;
  }

  .content-excerpt::first-letter {
    font-family: 'EB Garamond', serif;
    font-size: 10rem;
    line-height: 0.65;
    float: left;
    margin: 0.15rem 1.5rem 0.5rem 0;
    color: var(--drop-cap-color);
    font-weight: 500;
    opacity: 0.4;
    filter: saturate(0.5) brightness(1.2);
  }

  .continue-reading {
    text-align: center;
    margin: 3rem 0 0;
    position: relative;
  }

  .continue-reading::before {
    content: '';
    position: absolute;
    top: -1.5rem;
    left: 50%;
    transform: translateX(-50%);
    width: 3px;
    height: 3px;
    background: currentColor;
    border-radius: 50%;
    opacity: 0.3;
  }

  .continue-reading a {
    color: var(--accent-secondary);
    text-decoration: none;
    font-size: 0.9rem;
    font-weight: 400;
    letter-spacing: 0.02em;
    transition: all 0.2s ease;
    padding: 0.5rem 1.2rem;
    border: 1px solid var(--border-accent);
    border-radius: 25px;
    background: var(--bg-accent);
    position: relative;
    display: inline-flex;
    align-items: center;
    gap: 0.4rem;
  }

  .continue-reading a::after {
    content: '‚Üí';
    transition: transform 0.2s ease;
    font-size: 0.8rem;
  }

  .continue-reading a:hover {
    color: var(--text-primary);
    border-color: var(--accent-secondary);
    background: var(--bg-accent);
    transform: translateY(-1px);
  }

  .continue-reading a:hover::after {
    transform: translateX(2px);
  }

  .footer {
    text-align: center;
    padding: 8rem 0 4rem;
    color: var(--text-light);
    font-size: 0.8rem;
    font-weight: 300;
  }

  @media (max-width: 768px) {
    .container {
      padding: 5rem 1.5rem 2rem; /* More top padding for fixed nav */
      max-width: 100%;
    }

    .header {
      padding: 6rem 0 4rem; /* Reduced for mobile screens */
    }

    .site-title {
      font-size: clamp(3rem, 15vw, 5rem);
    }

    .hero-text {
      font-size: 1.15rem; /* Slightly larger for readability */
      line-height: 1.75;
      padding: 0 0.5rem; /* Add some padding */
    }

    .intro-text {
      font-size: 1rem;
    }

    .stats-overview {
      gap: 1.5rem;
      flex-wrap: wrap;
      justify-content: center;
    }

    .stat-item {
      flex-direction: column;
      min-width: 80px;
    }

    .stat-number {
      font-size: 1.8rem;
    }

    .stat-label {
      font-size: 0.85rem;
    }

    .browse-by-type h3 {
      font-size: 1.3rem;
    }

    .type-cards {
      grid-template-columns: 1fr;
      gap: 1rem;
    }

    .type-card {
      padding: 1.5rem; /* More padding for touch */
      min-height: 120px; /* Ensure minimum height */
    }

    .type-name {
      font-size: 1.2rem;
    }

    .type-count {
      font-size: 0.85rem;
    }

    .type-description {
      font-size: 0.9rem;
      line-height: 1.5;
    }

    .era-links {
      flex-direction: column;
      gap: 1rem;
    }

    .era-link {
      min-width: auto;
      flex-direction: row;
      justify-content: space-between;
      padding: 1.25rem 1.5rem; /* More padding for touch targets */
      min-height: 56px; /* Ensure good touch target size */
    }

    .era-name {
      font-size: 1rem;
    }

    .era-count {
      font-size: 0.8rem;
    }

    .random-letter-btn-large {
      font-size: 1.1rem;
      padding: 1.25rem 2.5rem;
    }

    .random-description {
      font-size: 1rem;
      margin-top: 1.25rem;
    }

    .section-title {
      font-size: 1.8rem;
    }

    .featured-content {
      gap: 4rem;
    }

    .content-preview::before {
      display: none;
    }

    .content-excerpt {
      font-size: 1rem;
      line-height: 1.7;
    }

    .content-excerpt::first-letter {
      font-size: 5rem;
      margin: 0.1rem 0.8rem 0.2rem 0;
    }

    .content-meta {
      font-size: 0.9rem;
    }

    .continue-reading a {
      font-size: 0.95rem;
    }
  }
</style>

<script src="/js/random-letter.js" is:inline></script>
