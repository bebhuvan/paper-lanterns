---
import Layout from '../layouts/Layout.astro';
import Navigation from '../components/Navigation.astro';
import SearchBox from '../components/SearchBox.astro';
import ContentCard from '../components/ContentCard.astro';
import { getAllContentItems, sortByDate, filterContent } from '../lib/data-layer';

// Get all content from data layer (cached and sorted)
const allContent = sortByDate(await getAllContentItems(), 'desc');

// Get counts by type
const letters = filterContent(allContent, { contentType: 'letter' });
const speeches = filterContent(allContent, { contentType: 'speech' });
const lectures = filterContent(allContent, { contentType: 'lecture' });
const essays = filterContent(allContent, { contentType: 'essay' });

const totalCount = allContent.length;
---

<Layout
  title="Archive - Paper Lanterns"
  description="A complete collection of historic letters, essays, speeches, and lectures that shaped humanity."
>
  <Navigation />

  <main>
    <section class="archive-header">
      <h1>Archive</h1>
      <p class="archive-subtitle">
        A complete collection of historic letters, essays, speeches, and lectures that shaped humanity.
      </p>
      <div class="archive-search">
        <SearchBox placeholder="Search archive by title, author, or content..." id="archive-search" />
      </div>
    </section>

    <nav class="filter-nav">
      <div class="filter-nav-content">
        <a href="#" class="filter-link active" data-filter="all">All (<span class="count" data-count="all">{totalCount}</span>)</a>
        <a href="#" class="filter-link" data-filter="letter">Letters (<span class="count" data-count="letter">{letters.length}</span>)</a>
        <a href="#" class="filter-link" data-filter="essay">Essays (<span class="count" data-count="essay">{essays.length}</span>)</a>
        <a href="#" class="filter-link" data-filter="speech">Speeches (<span class="count" data-count="speech">{speeches.length}</span>)</a>
        <a href="#" class="filter-link" data-filter="lecture">Lectures (<span class="count" data-count="lecture">{lectures.length}</span>)</a>
      </div>
    </nav>

    <section class="archive-container">
      <div class="archive-grid">
        {allContent.map((item) => (
          <div data-type={item.contentType}>
            <ContentCard item={item} variant="compact" showExcerpt={true} />
          </div>
        ))}
      </div>
    </section>

    <section class="archive-stats">
      <div class="stats-grid">
        <div class="stat-item">
          <div class="stat-number">{totalCount}</div>
          <div class="stat-label">Total Pieces</div>
        </div>
        <div class="stat-item">
          <div class="stat-number">{letters.length}</div>
          <div class="stat-label">Letters</div>
        </div>
        <div class="stat-item">
          <div class="stat-number">{essays.length}</div>
          <div class="stat-label">Essays</div>
        </div>
        <div class="stat-item">
          <div class="stat-number">{speeches.length}</div>
          <div class="stat-label">Speeches</div>
        </div>
      </div>
    </section>

    <footer class="footer">
      <div class="footer-content">
        <div class="footer-brand">
          <h3>Paper Lanterns</h3>
          <p>
            A modern anthology of history's most profound correspondence—preserving words
            that shaped hearts, minds, and the human condition.
          </p>
        </div>
        <div class="footer-section">
          <h4>Browse</h4>
          <ul>
            <li><a href="/letters">All Letters</a></li>
            <li><a href="/archive">By Era</a></li>
            <li><a href="/collections">Collections</a></li>
            <li><a href="/search">Search</a></li>
          </ul>
        </div>
        <div class="footer-section">
          <h4>Connect</h4>
          <ul>
            <li><a href="/about">About</a></li>
            <li><a href="/garden">Garden</a></li>
            <li><a href="/rss.xml">RSS Feed</a></li>
          </ul>
        </div>
      </div>
      <div class="footer-bottom">
        © 2025 Paper Lanterns · All Rights Reserved
      </div>
    </footer>
  </main>
</Layout>

<style>
  /* Archive header */
  .archive-header {
    max-width: 1600px;
    margin: 0 auto;
    padding: 10vh 6vw 4vh;
  }

  .archive-header h1 {
    font-size: clamp(2.5rem, 5vw, 4rem);
    font-weight: 300;
    letter-spacing: -0.025em;
    margin-bottom: 1.5rem;
    color: var(--text-primary);
  }

  .archive-subtitle {
    font-size: 1.125rem;
    color: var(--text-tertiary);
    font-weight: 300;
    max-width: 600px;
    margin-bottom: 2rem;
  }

  .archive-search {
    max-width: 600px;
    margin-top: 3rem;
  }

  /* No results message */
  .no-results {
    grid-column: 1 / -1;
    text-align: center;
    padding: 4rem 2rem;
  }

  .no-results p {
    font-size: 1.125rem;
    color: var(--text-tertiary);
    margin-bottom: 1.5rem;
  }

  .clear-search {
    padding: 0.75rem 1.5rem;
    background: var(--accent-primary);
    color: white;
    border: none;
    border-radius: 4px;
    font-size: 0.9375rem;
    font-family: 'Inter', -apple-system, sans-serif;
    cursor: pointer;
    transition: background 0.2s ease, transform 0.2s ease;
  }

  .clear-search:hover {
    background: var(--accent-secondary);
    transform: translateY(-1px);
  }

  .clear-search:active {
    transform: translateY(0);
  }

  /* Filter navigation */
  .filter-nav {
    max-width: 1600px;
    margin: 0 auto 6vh;
    padding: 0 6vw;
    border-bottom: 1px solid var(--border-secondary);
  }

  .filter-nav-content {
    display: flex;
    justify-content: flex-start;
    gap: 3rem;
    padding-bottom: 2rem;
  }

  .filter-nav a {
    font-size: 0.875rem;
    color: var(--text-muted);
    text-decoration: none;
    font-weight: 400;
    letter-spacing: 0.02em;
    position: relative;
    padding-bottom: 0.5rem;
  }

  .filter-nav a.active {
    color: var(--text-primary);
  }

  .filter-nav a.active::after {
    content: '';
    position: absolute;
    bottom: -2rem;
    left: 0;
    right: 0;
    height: 1px;
    background: var(--accent-gold);
  }

  /* Archive grid */
  .archive-container {
    max-width: 1600px;
    margin: 0 auto 12vh;
    padding: 0 6vw;
  }

  .archive-grid {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 0;
  }

  .archive-item {
    position: relative;
    padding: 2.5rem 2rem;
    border-right: 1px solid var(--border-primary);
    border-bottom: 1px solid var(--border-primary);
    text-decoration: none;
    display: block;
    background: var(--bg-secondary);
  }

  .archive-item:nth-child(3n) {
    border-right: none;
  }

  /* Color variations */
  .archive-item:nth-child(6n+1) {
    border-left: 1px solid rgba(147, 112, 219, 0.2);
  }

  .archive-item:nth-child(6n+2) {
    border-left: 1px solid rgba(192, 132, 151, 0.2);
  }

  .archive-item:nth-child(6n+3) {
    border-left: 1px solid rgba(134, 168, 182, 0.2);
  }

  .archive-item:nth-child(6n+4) {
    border-left: 1px solid rgba(166, 143, 113, 0.2);
  }

  .archive-item:nth-child(6n+5) {
    border-left: 1px solid rgba(156, 148, 171, 0.2);
  }

  .archive-item:nth-child(6n+6) {
    border-left: 1px solid rgba(175, 139, 156, 0.2);
  }

  .archive-meta {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    margin-bottom: 2rem;
    font-size: 0.75rem;
    font-family: 'Inter', -apple-system, sans-serif;
  }

  .archive-category {
    font-size: 0.625rem;
    text-transform: uppercase;
    letter-spacing: 0.15em;
    font-weight: 500;
  }

  .archive-item:nth-child(6n+1) .archive-category {
    color: rgba(147, 112, 219, 0.7);
  }

  .archive-item:nth-child(6n+2) .archive-category {
    color: rgba(192, 132, 151, 0.7);
  }

  .archive-item:nth-child(6n+3) .archive-category {
    color: rgba(134, 168, 182, 0.7);
  }

  .archive-item:nth-child(6n+4) .archive-category {
    color: rgba(166, 143, 113, 0.7);
  }

  .archive-item:nth-child(6n+5) .archive-category {
    color: rgba(156, 148, 171, 0.7);
  }

  .archive-item:nth-child(6n+6) .archive-category {
    color: rgba(175, 139, 156, 0.7);
  }

  .archive-date {
    color: var(--text-muted);
    letter-spacing: 0.02em;
  }

  .meta-separator {
    color: var(--text-light);
  }

  .archive-item h3 {
    font-size: 1.5rem;
    font-weight: 400;
    line-height: 1.3;
    margin-bottom: 1rem;
    letter-spacing: -0.015em;
    color: var(--text-primary);
  }

  .archive-author {
    font-size: 0.9375rem;
    color: var(--text-secondary);
    margin-bottom: 1.25rem;
    font-weight: 400;
  }

  .archive-excerpt {
    font-size: 0.9375rem;
    line-height: 1.7;
    color: var(--text-secondary);
    font-weight: 300;
  }

  /* Stats section - elegant and refined */
  .archive-stats {
    max-width: 1600px;
    margin: 10vh auto;
    padding: 5vh 6vw;
    background: var(--bg-accent);
    border-top: 1px solid var(--border-primary);
    border-bottom: 1px solid var(--border-primary);
  }

  .stats-grid {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    gap: 3rem;
  }

  .stat-item {
    text-align: center;
  }

  .stat-number {
    font-size: 1.875rem;
    font-weight: 400;
    letter-spacing: -0.015em;
    margin-bottom: 0.625rem;
    color: rgba(239, 127, 96, 0.65);
  }

  .stat-label {
    font-size: 0.6875rem;
    text-transform: uppercase;
    letter-spacing: 0.12em;
    color: var(--text-muted);
    font-weight: 500;
    font-family: 'Inter', -apple-system, sans-serif;
  }

  /* Footer */
  .footer {
    background: var(--bg-secondary);
    border-top: 1px solid var(--border-secondary);
    color: var(--text-primary);
    padding: 10vh 6vw 5vh;
    margin-top: 0;
  }

  .footer-content {
    max-width: 1600px;
    margin: 0 auto;
    display: grid;
    grid-template-columns: 2fr 1fr 1fr;
    gap: 8vw;
    padding-bottom: 5vh;
    border-bottom: 1px solid var(--border-secondary);
  }

  .footer-brand h3 {
    font-size: 0.9375rem;
    font-weight: 500;
    letter-spacing: 0.08em;
    text-transform: uppercase;
    margin-bottom: 1.5rem;
    color: var(--text-primary);
    font-family: 'Inter', -apple-system, sans-serif;
  }

  .footer-brand p {
    font-size: 0.9375rem;
    line-height: 1.8;
    color: var(--text-tertiary);
    font-weight: 300;
  }

  .footer-section h4 {
    font-size: 0.625rem;
    text-transform: uppercase;
    letter-spacing: 0.15em;
    margin-bottom: 1.5rem;
    color: var(--text-muted);
    font-weight: 500;
    font-family: 'Inter', -apple-system, sans-serif;
  }

  .footer-section ul {
    list-style: none;
  }

  .footer-section li {
    margin-bottom: 0.625rem;
  }

  .footer-section a {
    color: var(--text-tertiary);
    text-decoration: none;
    font-size: 0.8125rem;
    font-weight: 300;
    transition: color 0.2s ease;
  }

  .footer-section a:hover {
    color: var(--text-primary);
  }

  .footer-bottom {
    margin-top: 5vh;
    text-align: center;
    font-size: 0.6875rem;
    color: var(--text-light);
    letter-spacing: 0.06em;
    font-family: 'Inter', -apple-system, sans-serif;
  }

  @media (max-width: 1024px) {
    .archive-grid {
      grid-template-columns: repeat(2, 1fr);
    }

    .archive-item:nth-child(2n) {
      border-right: none;
    }

    .archive-item:nth-child(3n) {
      border-right: 1px solid var(--border-secondary);
    }

    .stats-grid {
      grid-template-columns: repeat(2, 1fr);
      gap: 3rem;
    }

    .footer-content {
      grid-template-columns: 1fr;
      gap: 3rem;
    }
  }

  @media (max-width: 640px) {
    .archive-header {
      padding: 8vh 5vw 4vh;
    }

    .filter-nav {
      padding: 0 5vw;
    }

    .filter-nav-content {
      gap: 2rem;
      overflow-x: auto;
    }

    .filter-nav a {
      white-space: nowrap;
      font-size: 0.875rem;
    }

    .archive-container {
      padding: 0 5vw;
    }

    .archive-grid {
      grid-template-columns: 1fr;
    }

    .archive-item {
      padding: 3rem 2rem;
      border-right: none;
    }

    .archive-item:nth-child(n) {
      border-right: none;
    }

    .stats-grid {
      grid-template-columns: 1fr;
      gap: 2.5rem;
    }

    .stat-number {
      font-size: 2.5rem;
    }

    .footer {
      padding: 8vh 5vw 4vh;
    }
  }
</style>

<script>
  // Archive search and filter functionality
  document.addEventListener('DOMContentLoaded', () => {
    const searchInput = document.getElementById('archive-search');
    const filterLinks = document.querySelectorAll('.filter-link');
    const archiveItems = document.querySelectorAll('.archive-item');
    let currentFilter = 'all';
    let searchQuery = '';

    // Update counts
    function updateCounts() {
      const counts = {};
      archiveItems.forEach(item => {
        if (item.style.display !== 'none') {
          const type = item.getAttribute('data-type');
          counts[type] = (counts[type] || 0) + 1;
          counts['all'] = (counts['all'] || 0) + 1;
        }
      });

      document.querySelectorAll('.count').forEach(span => {
        const type = span.getAttribute('data-count');
        span.textContent = counts[type] || 0;
      });
    }

    // Apply both search and filter
    function applyFilters() {
      let visibleCount = 0;

      archiveItems.forEach(item => {
        const itemType = item.getAttribute('data-type');
        const title = item.querySelector('h3')?.textContent.toLowerCase() || '';
        const author = item.querySelector('.archive-author')?.textContent.toLowerCase() || '';
        const excerpt = item.querySelector('.archive-excerpt')?.textContent.toLowerCase() || '';

        const matchesSearch = !searchQuery ||
          title.includes(searchQuery) ||
          author.includes(searchQuery) ||
          excerpt.includes(searchQuery);

        const matchesFilter = currentFilter === 'all' || itemType === currentFilter;

        if (matchesSearch && matchesFilter) {
          item.style.display = 'block';
          visibleCount++;
        } else {
          item.style.display = 'none';
        }
      });

      updateCounts();

      // Show "no results" message if needed
      const grid = document.querySelector('.archive-grid');
      let noResults = grid.querySelector('.no-results');

      if (visibleCount === 0) {
        if (!noResults) {
          noResults = document.createElement('div');
          noResults.className = 'no-results';
          noResults.innerHTML = `
            <p>No items found${searchQuery ? ` matching "${searchQuery}"` : ''}.</p>
            <button class="clear-search">Clear search</button>
          `;
          grid.appendChild(noResults);

          noResults.querySelector('.clear-search')?.addEventListener('click', () => {
            searchInput.value = '';
            searchQuery = '';
            applyFilters();
          });
        }
      } else if (noResults) {
        noResults.remove();
      }
    }

    // Search with debounce
    let searchTimeout;
    searchInput?.addEventListener('input', (e) => {
      clearTimeout(searchTimeout);
      searchTimeout = setTimeout(() => {
        searchQuery = e.target.value.toLowerCase().trim();
        applyFilters();
      }, 200);
    });

    // Filter links
    filterLinks.forEach(link => {
      link.addEventListener('click', (e) => {
        e.preventDefault();
        filterLinks.forEach(l => l.classList.remove('active'));
        link.classList.add('active');
        currentFilter = link.getAttribute('data-filter');
        applyFilters();
      });
    });

    // Initial count
    updateCounts();
  });
</script>
