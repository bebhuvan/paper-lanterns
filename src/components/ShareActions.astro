---
/**
 * ShareActions - Share and copy action buttons
 * Used in: article detail pages
 */
---

<div class="content-actions" role="group" aria-label="Article sharing actions">
  <button data-action="share" class="action-btn" aria-label="Share this article">Share</button>
  <button data-action="copy-link" class="action-btn" aria-label="Copy article link to clipboard">Copy Link</button>
  <button data-action="copy-text" class="action-btn" aria-label="Copy article text to clipboard">Copy Text</button>
</div>

<!-- ARIA live region for toast notifications -->
<div aria-live="polite" aria-atomic="true" class="sr-only" id="toast-announcer"></div>

<style>
  .content-actions {
    display: flex;
    justify-content: center;
    gap: 0.75rem;
    margin: 8vh 0;
    padding: 0;
  }

  .action-btn {
    background: var(--bg-accent);
    border: 1px solid var(--border-primary);
    padding: 0.75rem 1.75rem;
    border-radius: 2px;
    color: var(--text-secondary);
    font-size: 0.75rem;
    cursor: pointer;
    font-family: 'Inter', -apple-system, sans-serif;
    font-weight: 400;
    letter-spacing: 0.04em;
    text-transform: uppercase;
    transition: background 0.2s ease, border-color 0.2s ease, color 0.2s ease;
    min-height: 44px;
    box-shadow: none;
  }

  .action-btn:hover {
    background: var(--bg-secondary);
    border-color: var(--border-accent);
    color: var(--text-primary);
  }

  .action-btn:focus-visible {
    outline: 2px solid var(--accent-primary);
    outline-offset: 3px;
  }

  /* Screen reader only class for ARIA live region */
  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border-width: 0;
  }

  @media (max-width: 768px) {
    .content-actions {
      flex-wrap: wrap;
      gap: 1rem;
    }

    .action-btn {
      font-size: 0.9rem;
      padding: 0.6rem 1rem;
    }
  }
</style>

<script>
  // Share functionality
  async function shareContent() {
    if (navigator.share) {
      try {
        await navigator.share({
          title: document.title,
          url: window.location.href
        });
      } catch (err) {
        if ((err as Error).name !== 'AbortError') {
          copyLink();
        }
      }
    } else {
      copyLink();
    }
  }

  // Copy link to clipboard
  async function copyLink() {
    try {
      await navigator.clipboard.writeText(window.location.href);
      showToast('Link copied to clipboard');
    } catch (err) {
      // Fallback for older browsers
      const textArea = document.createElement('textarea');
      textArea.value = window.location.href;
      textArea.style.position = 'fixed';
      textArea.style.left = '-999999px';
      document.body.appendChild(textArea);
      textArea.select();
      document.execCommand('copy');
      document.body.removeChild(textArea);
      showToast('Link copied to clipboard');
    }
  }

  // Copy text content
  async function copyText() {
    const contentSelectors = [
      '.letter-content',
      '.speech-content',
      '.essay-content',
      '.lecture-content'
    ];

    let content: Element | null = null;
    for (const selector of contentSelectors) {
      content = document.querySelector(selector);
      if (content) break;
    }

    if (content) {
      const text = content.textContent || content.innerHTML;
      try {
        await navigator.clipboard.writeText(text);
        showToast('Content copied to clipboard');
      } catch (err) {
        console.error('Failed to copy text:', err);
        showToast('Failed to copy content');
      }
    }
  }

  // Simple toast notification with ARIA live region support
  function showToast(message: string) {
    // Announce to screen readers
    const announcer = document.getElementById('toast-announcer');
    if (announcer) {
      announcer.textContent = message;
      // Clear after announcement to allow repeat announcements
      setTimeout(() => {
        announcer.textContent = '';
      }, 1000);
    }

    // Visual toast
    const existing = document.querySelector('.toast');
    if (existing) existing.remove();

    const toast = document.createElement('div');
    toast.className = 'toast';
    toast.textContent = message;
    toast.setAttribute('role', 'status');
    toast.setAttribute('aria-live', 'polite');
    toast.style.cssText = `
      position: fixed;
      bottom: 2rem;
      left: 50%;
      transform: translateX(-50%);
      background: var(--text-primary);
      color: white;
      padding: 0.75rem 1.5rem;
      border-radius: 25px;
      font-size: 0.9rem;
      z-index: 1000;
      animation: slideUp 0.3s ease;
    `;

    document.body.appendChild(toast);
    setTimeout(() => {
      toast.style.animation = 'slideDown 0.3s ease';
      setTimeout(() => toast.remove(), 300);
    }, 2000);
  }

  // Attach event listeners
  document.querySelectorAll('[data-action="share"]').forEach(btn => {
    btn.addEventListener('click', shareContent);
  });

  document.querySelectorAll('[data-action="copy-link"]').forEach(btn => {
    btn.addEventListener('click', copyLink);
  });

  document.querySelectorAll('[data-action="copy-text"]').forEach(btn => {
    btn.addEventListener('click', copyText);
  });
</script>
