---
export interface Props {
  title: string;
  description?: string;
  image?: string;
  author?: string;
  publishedTime?: string;
  modifiedTime?: string;
}

const { 
  title, 
  description = "A curated digital archive of historically significant letters and speeches in the public domain.", 
  image = "/og-image.png",
  author,
  publishedTime,
  modifiedTime
} = Astro.props;

const canonicalURL = new URL(Astro.url.pathname, Astro.site);
const siteName = "Paper Lanterns";
const siteUrl = Astro.site || "https://paperlanterns.ink";

// Generate cryptographically secure nonce for CSP
const nonce = crypto.getRandomValues(new Uint8Array(16))
  .reduce((str, byte) => str + byte.toString(16).padStart(2, '0'), '');
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0, viewport-fit=cover" />
    <meta name="generator" content={Astro.generator} />

    <!-- Critical theme initialization to prevent flicker -->
    <script is:inline>
      (function() {
        try {
          const stored = localStorage.getItem('theme');
          const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
          const theme = stored || (prefersDark ? 'dark' : 'light');
          document.documentElement.dataset.theme = theme;

          // Save preference if not set
          if (!stored) {
            localStorage.setItem('theme', theme);
          }
        } catch (e) {
          document.documentElement.dataset.theme = 'light';
        }
      })();
    </script>
    
    <!-- Primary Meta Tags -->
    <title>{title}</title>
    <meta name="title" content={title} />
    <meta name="description" content={description} />
    <link rel="canonical" href={canonicalURL} />
    
    <!-- Open Graph / Facebook -->
    <meta property="og:type" content="website" />
    <meta property="og:site_name" content={siteName} />
    <meta property="og:url" content={canonicalURL} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={new URL(image, siteUrl)} />
    <meta property="og:image:width" content="1200" />
    <meta property="og:image:height" content="630" />
    
    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={canonicalURL} />
    <meta property="twitter:title" content={title} />
    <meta property="twitter:description" content={description} />
    <meta property="twitter:image" content={new URL(image, siteUrl)} />
    
    <!-- Article Meta (for letter/speech pages) -->
    {author && <meta property="article:author" content={author} />}
    {publishedTime && <meta property="article:published_time" content={publishedTime} />}
    {modifiedTime && <meta property="article:modified_time" content={modifiedTime} />}
    
    <!-- Favicon -->
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png" />
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png" />

    <!-- RSS Feed -->
    <link rel="alternate" type="application/rss+xml" title="Paper Lanterns RSS Feed" href="/rss.xml" />
    
    <!-- PWA Manifest -->
    <link rel="manifest" href="/manifest.json" />
    <meta name="apple-mobile-web-app-capable" content="yes" />
    <meta name="apple-mobile-web-app-status-bar-style" content="default" />
    <meta name="apple-mobile-web-app-title" content="Paper Lanterns" />
    <meta name="application-name" content="Paper Lanterns" />
    <meta name="msapplication-TileColor" content="#d4a574" />
    
    <!-- Theme and Colors -->
    <meta name="theme-color" content="#fffef9" media="(prefers-color-scheme: light)" />
    <meta name="theme-color" content="#1a1815" media="(prefers-color-scheme: dark)" />
    <meta name="color-scheme" content="light dark" />
    
    <!-- Preconnect and DNS prefetch for performance -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    
    <!-- Critical inline CSS for above-the-fold content -->
    <style is:inline>
      /* Critical CSS - inline to prevent render blocking */
      :root {
        --bg-primary: #fafaf9;
        --bg-secondary: rgba(250, 250, 249, 0.95);
        --bg-accent: rgba(255, 255, 255, 0.6);
        --text-primary: #171717;
        --text-secondary: rgba(23, 23, 23, 0.70);
        --text-tertiary: rgba(23, 23, 23, 0.60);
        --text-muted: rgba(23, 23, 23, 0.55);
        --text-light: rgba(23, 23, 23, 0.48);
        --border-primary: rgba(23, 23, 23, 0.10);
        --border-secondary: rgba(23, 23, 23, 0.12);
        --border-accent: rgba(23, 23, 23, 0.18);
        --border-subtle: rgba(23, 23, 23, 0.08);
        --border-medium: rgba(23, 23, 23, 0.15);
        --border-strong: rgba(23, 23, 23, 0.35);
        --accent-primary: rgba(239, 127, 96, 0.7);
        --accent-secondary: rgba(239, 127, 96, 0.85);
        --accent-tertiary: rgba(239, 127, 96, 0.6);
        --accent-gold: rgba(239, 127, 96, 0.4);
        --drop-shadow: rgba(23, 23, 23, 0.1);
        --drop-shadow-hover: rgba(23, 23, 23, 0.06);
        --gradient-1: rgba(147, 112, 219, 0.04);
        --gradient-2: rgba(192, 132, 151, 0.04);
      }
      [data-theme="dark"] {
        --bg-primary: #1a1a1a;
        --bg-secondary: #242424;
        --bg-accent: #2f2f2f;
        --text-primary: #efefef;
        --text-secondary: #c8c8c8;
        --text-tertiary: #a0a0a0;
        --text-muted: #888888;
        --text-light: #757575;
        --border-primary: rgba(255,255,255,0.14);
        --border-secondary: rgba(255,255,255,0.18);
        --border-accent: rgba(239, 127, 96, 0.4);
        --border-subtle: rgba(255,255,255,0.08);
        --border-medium: rgba(255,255,255,0.25);
        --border-strong: rgba(239, 127, 96, 0.6);
        --accent-primary: rgba(239, 127, 96, 0.95);
        --accent-secondary: rgba(255, 140, 110, 1);
        --accent-tertiary: rgba(239, 127, 96, 0.8);
        --accent-gold: rgba(239, 127, 96, 0.65);
        --drop-shadow: rgba(0, 0, 0, 0.4);
        --drop-shadow-hover: rgba(0, 0, 0, 0.5);
        --gradient-1: rgba(239, 127, 96, 0.08);
        --gradient-2: rgba(239, 127, 96, 0.05);
      }
      body {
        font-family: 'Crimson Pro', 'Georgia', serif;
        background: var(--bg-primary);
        color: var(--text-primary);
        line-height: 1.7;
        margin: 0;
        padding: 0;
        overflow-x: hidden;
        transition: background-color 0.3s ease, color 0.3s ease;
      }
      h1, h2, h3, h4, h5, h6 {
        font-family: 'Crimson Pro', 'Georgia', serif;
        font-weight: 300;
        line-height: 1.2;
        color: var(--text-primary);
      }
      * {
        box-sizing: border-box;
      }
    </style>
    
    <!-- Fonts - optimized: removed unused weights (500, 600), added italics -->
    <!-- Preload critical font for faster rendering -->
    <link rel="preload" href="https://fonts.gstatic.com/s/crimsonpro/v23/q5uUsoa5M_tv7IihmnkabC5XiXCAlXGks1WZzm18OJE.woff2" as="font" type="font/woff2" crossorigin>

    <link id="fonts-link" href="https://fonts.googleapis.com/css2?family=Crimson+Pro:ital,wght@0,300;0,400;1,300;1,400&family=Inter:wght@400;500&display=swap" rel="stylesheet" media="print">
    <noscript>
      <link href="https://fonts.googleapis.com/css2?family=Crimson+Pro:ital,wght@0,300;0,400;1,300;1,400&family=Inter:wght@400;500&display=swap" rel="stylesheet">
    </noscript>

    <!-- Resource hints for better performance -->
    <link rel="dns-prefetch" href="//fonts.googleapis.com">
    <link rel="dns-prefetch" href="//fonts.gstatic.com">
    <link rel="dns-prefetch" href="//static.cloudflareinsights.com">

    <!-- Preload critical assets -->
    <link rel="modulepreload" href="/sw.js">
    
    <!-- Prefetch important pages for faster navigation -->
    <link rel="prefetch" href="/letters">
    <link rel="prefetch" href="/essays">
    <link rel="prefetch" href="/speeches">
    <link rel="prefetch" href="/api/random-content.json">
    
    <!-- Additional SEO meta tags -->
    <meta name="robots" content="index, follow" />
    <meta name="googlebot" content="index, follow" />
    <meta name="language" content="en" />
    <meta name="revisit-after" content="7 days" />
    
    <!-- JSON-LD Structured Data -->
    <script type="application/ld+json" set:html={JSON.stringify({
      "@context": "https://schema.org",
      "@type": "WebSite",
      "name": siteName,
      "description": description,
      "url": siteUrl,
      "potentialAction": {
        "@type": "SearchAction",
        "target": {
          "@type": "EntryPoint",
          "urlTemplate": `${siteUrl}/search?q={search_term_string}`
        },
        "query-input": "required name=search_term_string"
      }
    })} />
  </head>
  <body>
    <slot />
    
    <!-- Dynamic script loader for strict CSP compliance -->
    <script nonce={nonce}>
      // Dynamically load external scripts to comply with strict-dynamic CSP
      const scripts = [
        '/js/font-loader.js',
        '/js/utils.js',
        '/js/random-letter.js',
        '/js/mobile-menu.js',
        '/js/sw-register.js'
      ];
      
      // Create Trusted Types policy for script URLs
      let trustedPolicy = null;
      if (window.trustedTypes && trustedTypes.createPolicy) {
        trustedPolicy = trustedTypes.createPolicy('script-loader', {
          createScriptURL: (url) => url
        });
      }
      
      // Load scripts after DOM is ready
      if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', loadScripts);
      } else {
        loadScripts();
      }
      
      function loadScripts() {
        scripts.forEach((src, index) => {
          const script = document.createElement('script');
          
          // Use TrustedScriptURL if available
          if (trustedPolicy) {
            script.src = trustedPolicy.createScriptURL(src);
          } else {
            script.src = src;
          }
          
          script.defer = true;
          // Add slight delay to preserve original loading order
          setTimeout(() => document.head.appendChild(script), index * 10);
        });
      }
    </script>
  </body>
</html>

<style is:global>
  @import '../styles/utilities.css';

  :root {
    /* Light mode colors - WCAG AA compliant */
    --bg-primary: #fafaf9;
    --bg-secondary: rgba(250, 250, 249, 0.95);
    --bg-accent: rgba(255, 255, 255, 0.6);
    --text-primary: #171717;
    --text-secondary: rgba(23, 23, 23, 0.70);
    --text-tertiary: rgba(23, 23, 23, 0.60);
    --text-muted: rgba(23, 23, 23, 0.55);
    --text-light: rgba(23, 23, 23, 0.48);
    --border-primary: rgba(23, 23, 23, 0.10);
    --border-secondary: rgba(23, 23, 23, 0.12);
    --border-accent: rgba(23, 23, 23, 0.18);
    --border-subtle: rgba(23, 23, 23, 0.08);
    --border-medium: rgba(23, 23, 23, 0.15);
    --border-strong: rgba(23, 23, 23, 0.35);
    --accent-primary: rgba(239, 127, 96, 0.7);
    --accent-secondary: rgba(239, 127, 96, 0.85);
    --accent-tertiary: rgba(239, 127, 96, 0.6);
    --accent-gold: rgba(239, 127, 96, 0.4);
    --drop-shadow: rgba(23, 23, 23, 0.1);
    --drop-shadow-hover: rgba(23, 23, 23, 0.06);
    --gradient-1: rgba(147, 112, 219, 0.04);
    --gradient-2: rgba(192, 132, 151, 0.04);
  }

  [data-theme="dark"] {
    /* Dark mode colors - WCAG AA compliant, high contrast */
    --bg-primary: #1a1a1a;
    --bg-secondary: #242424;
    --bg-accent: #2f2f2f;
    --text-primary: #efefef;
    --text-secondary: #c8c8c8;
    --text-tertiary: #a0a0a0;
    --text-muted: #888888;
    --text-light: #757575;
    --border-primary: rgba(255,255,255,0.14);
    --border-secondary: rgba(255,255,255,0.18);
    --border-accent: rgba(239, 127, 96, 0.4);
    --border-subtle: rgba(255,255,255,0.08);
    --border-medium: rgba(255,255,255,0.25);
    --border-strong: rgba(239, 127, 96, 0.6);
    --accent-primary: rgba(239, 127, 96, 0.95);
    --accent-secondary: rgba(255, 140, 110, 1);
    --accent-tertiary: rgba(239, 127, 96, 0.8);
    --accent-gold: rgba(239, 127, 96, 0.65);
    --drop-shadow: rgba(0, 0, 0, 0.4);
    --drop-shadow-hover: rgba(0, 0, 0, 0.5);
    --gradient-1: rgba(239, 127, 96, 0.08);
    --gradient-2: rgba(239, 127, 96, 0.05);
  }

  * {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
  }

  body {
    font-family: 'Crimson Pro', 'Georgia', serif;
    background: var(--bg-primary);
    color: var(--text-primary);
    line-height: 1.7;
    overflow-x: hidden;
    position: relative;
  }

  /* REFINED: Subtle paper texture overlay */
  body::before {
    content: '';
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="300" height="300"><filter id="noise"><feTurbulence type="fractalNoise" baseFrequency="0.9" numOctaves="4" stitchTiles="stitch"/></filter><rect width="100%" height="100%" filter="url(%23noise)" opacity="0.03"/></svg>');
    pointer-events: none;
    z-index: -1;
    opacity: 0.5;
  }

  /* Typography */
  h1, h2, h3, h4, h5, h6 {
    font-family: 'Crimson Pro', 'Georgia', serif;
    font-weight: 300;
    line-height: 1.2;
    color: var(--text-primary);
  }

  /* Responsive Typography - Improved for better mobile readability */
  @media (max-width: 768px) {
    body {
      font-size: 1rem; /* Increased from 0.9rem */
      line-height: 1.7;
    }
    
    h1, h2, h3, h4, h5, h6 {
      line-height: 1.3;
    }
    
    h1 {
      font-size: clamp(2rem, 8vw, 3rem);
    }
    
    h2 {
      font-size: clamp(1.5rem, 6vw, 2rem);
    }
    
    h3 {
      font-size: clamp(1.25rem, 5vw, 1.5rem);
    }
    
    /* Better text contrast on mobile - light mode only */
    :root:not([data-theme="dark"]) {
      --text-primary: #1a1a1a;
      --text-secondary: #333;
    }
    
    /* Ensure dark mode text remains visible on mobile */
    [data-theme="dark"] {
      --text-primary: #f0ead9;
      --text-secondary: #e0dbc8;
    }
  }

  @media (max-width: 480px) {
    body {
      font-size: 1rem; /* Increased from 0.85rem */
      line-height: 1.8;
    }
    
    /* Increase touch targets */
    button, a {
      min-height: 44px;
      min-width: 44px;
    }
  }

  /* Global overflow fixes for markdown content */
  p, div, article, section {
    overflow-wrap: break-word;
    word-wrap: break-word;
    word-break: break-word;
  }
  
  /* Prevent horizontal scrolling */
  main {
    overflow-x: hidden;
  }
  
  /* Fix for long URLs and code blocks */
  pre {
    overflow-x: auto;
    max-width: 100%;
  }
  
  code {
    word-break: break-all;
  }

  /* Smooth scrolling */
  html {
    scroll-behavior: smooth;
  }

  /* Remove default link styles */
  a {
    text-decoration: none;
    color: inherit;
  }

  /* Focus styles for accessibility */
  *:focus-visible {
    outline: 2px solid var(--accent-primary);
    outline-offset: 2px;
  }

  /* Selection styles */
  ::selection {
    background: rgba(212, 165, 116, 0.2);
    color: var(--text-primary);
  }

  /* Print styles */
  @media print {
    * {
      -webkit-print-color-adjust: exact !important;
      color-adjust: exact !important;
    }

    body {
      font-size: 12pt;
      line-height: 1.4;
      color: #000;
      background: #fff;
    }

    body::before {
      display: none;
    }

    .top-nav,
    .back-link,
    .letter-actions,
    .speech-actions,
    .letter-nav,
    .speech-nav,
    .random-letter-btn,
    .search-container,
    .nav-links,
    .continue-reading,
    .footer-actions {
      display: none !important;
    }

    .reading-container {
      padding: 1rem 0;
      max-width: none;
      margin: 0;
    }

    .container {
      max-width: none;
      padding: 0;
      margin: 0;
    }

    .letter-content,
    .speech-content {
      font-size: 11pt;
      line-height: 1.5;
    }

    .letter-content :global(p),
    .speech-content :global(p) {
      margin-bottom: 1rem;
      text-indent: 1.5rem;
      orphans: 3;
      widows: 3;
    }

    .letter-content :global(p:first-of-type),
    .speech-content :global(p:first-of-type) {
      text-indent: 0;
    }

    .letter-content :global(p:first-of-type::first-letter),
    .speech-content :global(p:first-of-type::first-letter) {
      font-size: 3rem;
      line-height: 1;
      float: left;
      margin: 0.2rem 0.5rem 0 0;
      color: #333;
    }

    .author,
    .context {
      color: #000;
    }

    .signature {
      margin-top: 2rem;
      color: #000;
    }

    .letter-meta,
    .speech-meta {
      margin-bottom: 2rem;
      page-break-after: avoid;
    }

    h1, h2, h3, h4, h5, h6 {
      color: #000;
      page-break-after: avoid;
    }

    /* Ensure page breaks work well */
    .letter,
    .speech {
      page-break-inside: avoid;
    }

    /* Print-specific footer */
    .footer {
      position: fixed;
      bottom: 1cm;
      left: 0;
      right: 0;
      font-size: 8pt;
      color: #666;
      text-align: center;
      border-top: 1pt solid #ccc;
      padding-top: 0.5rem;
    }
  }
</style>